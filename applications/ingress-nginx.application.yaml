apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ingress-nginx
  namespace: argocd
spec:
  syncPolicy:
    syncOptions:
      - ApplyOutOfSyncOnly=true
      - RespectIgnoreDifferences=true
      - CreateNamespace=true
      - ServerSideApply=true
  project: default
  sources:
    - chart: ingress-nginx
      repoURL: https://kubernetes.github.io/ingress-nginx
      targetRevision: 4.11.5
      helm:
        valuesObject:
          controller:
            extraVolumes:
              - name: crowdsec-bouncer-plugin
                emptyDir: {}
            extraInitContainers:
              - name: init-clone-crowdsec-bouncer
                image: crowdsecurity/lua-bouncer-plugin
                imagePullPolicy: IfNotPresent
                env:
                  - name: API_URL
                    value: "http://crowdsec-service.crowdsec.svc.cluster.local:8080"
                  - name: API_KEY
                    valueFrom:
                      secretKeyRef:
                        name: crowdsec-managed-secrets
                        key: INGRESS_NGINX_API_KEY
                  - name: BOUNCER_CONFIG
                    value: "/crowdsec/crowdsec-bouncer.conf"
                  - name: CAPTCHA_PROVIDER
                    value: "recaptcha"
                  - name: MODE
                    value: "stream"
                  - name: BAN_TEMPLATE_PATH
                    value: "/etc/nginx/lua/plugins/crowdsec/templates/ban.html"
                  - name: CAPTCHA_TEMPLATE_PATH
                    value: "/etc/nginx/lua/plugins/crowdsec/templates/captcha.html"
                  - name: APPSEC_URL
                    value: "http://crowdsec-appsec-service.crowdsec.svc.cluster.local:7422"
                  - name: APPSEC_FAILURE_ACTION
                    value: "passthrough"
                  - name: APPSEC_CONNECT_TIMEOUT
                    value: "100"
                  - name: APPSEC_SEND_TIMEOUT
                    value: "100"
                  - name: APPSEC_PROCESS_TIMEOUT
                    value: "1000"
                  - name: ALWAYS_SEND_TO_APPSEC
                    value: "true"
                command:
                  [
                    "sh",
                    "-c",
                    "sh /docker_start.sh; mkdir -p /lua_plugins/crowdsec/; cp -R /crowdsec/* /lua_plugins/crowdsec/",
                  ]
                volumeMounts:
                  - name: crowdsec-bouncer-plugin
                    mountPath: /lua_plugins
            extraVolumeMounts:
              - name: crowdsec-bouncer-plugin
                mountPath: /etc/nginx/lua/plugins/crowdsec
                subPath: crowdsec
            config:
              proxy-hide-headers: "Server, X-Powered-By"
              server-tokens: "False"
              enable-modsecurity: "False"
              enable-owasp-modsecurity-crs: "True"
              enable-real-ip: "True"
              allow-snippet-annotations: "True"
              annotations-risk-level: Critical
              enable-opentelemetry: "false"
              opentelemetry-operation-name: "HTTP $request_method $service_name $uri"
              modsecurity-snippet: |
                SecRuleEngine DetectionOnly
                SecRequestBodyAccess On
                SecAuditLogFormat JSON
                SecAuditEngine On
                SecAuditLog /dev/stdout
              plugins: "crowdsec"
              lua-shared-dicts: "crowdsec_cache: 50m"
              server-snippet: |
                resolver local=on ipv6=off;
            metrics:
              enabled: true
              serviceMonitor:
                enabled: true
            tolerations:
              - key: "group"
                operator: "Equal"
                value: "external"
                effect: "NoSchedule"
            kind: DaemonSet

  destination:
    server: https://kubernetes.default.svc
    namespace: ingress-nginx

operation:
  initiatedBy:
    username: github-actions
  sync:
    syncStrategy:
      hook: {}
